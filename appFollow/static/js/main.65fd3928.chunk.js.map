{"version":3,"sources":["serviceWorker.js","redux/field/field.constants.ts","helpers/history.tsx","helpers/field.ts","redux/field/actions/getNextGeneration.ts","redux/field/actions/resizeField.ts","redux/field/reducer/getNextGeneration.ts","redux/field/reducer/field.reducer.ts","helpers/redux.ts","redux/field/reducer/getPrevGeneration.ts","redux/field/reducer/toggleCellAliveStatus.ts","redux/field/reducer/initializeField.ts","redux/field/reducer/resizeField.ts","redux/rootReducer.tsx","redux/store.tsx","pages/Main/Main.tsx","redux/field/actions/getPrevGeneration.ts","redux/field/actions/toggleCellAliveStatus.ts","redux/field/actions/initializeField.ts","App.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","fieldConstants","history","createBrowserHistory","getAliveNeighborsCount","field","cellRow","cellCol","aliveNeighborsCount","wasNegativeRowOverflow","wasNegativeColOverflow","wasRowOverflow","row","length","col","preset1","preset2","preset3","getNextGeneration","dispatch","nextGenerationField","JSON","parse","stringify","getNextGenerationHelper","type","resizeField","oldField","newRowsCount","newColsCount","newField","rowsCount","colsCount","slice","push","Array","fill","map","resizeFieldHelper","fieldReducer","initialState","handlers","state","action","hasOwnProperty","createReducer","previousFields","prevField","pop","initialField","rootReducer","combineReducers","loggerMiddleware","createLogger","store","createStore","applyMiddleware","thunkMiddleware","b","withNaming","n","e","m","v","cn","Main","React","Component","generationDescriptor","x","handlePlayClick","this","setState","setInterval","updateGeneration","handlePauseClick","clearInterval","props","renderControls","getPrevGeneration","initializeField","className","pause","play","onClick","prev","next","renderField","toggleCellAliveStatus","style","gridTemplateColumns","rowIndex","cellInfo","colIndex","key","alive","render","connectedComponent","connect","newRowCount","alert","App","path","component","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.65fd3928.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","export const fieldConstants: Record<string, string> = {\n  GET_NEXT_GENERATION: \"GET_NEXT_GENERATION\",\n  GET_PREV_GENERATION: \"GET_PREV_GENERATION\",\n  TOGGLE_CELL_ALIVE_STATUS: \"TOGGLE_CELL_ALIVE_STATUS\",\n  INITIALIZE_FIELD: \"INITIALIZE_FIELD\",\n  RESIZE_FIELD: \"RESIZE_FIELD\",\n};\n","import { createBrowserHistory } from \"history\";\n\nexport const history = createBrowserHistory();\n","// определяет кол-во \"живых\" соседей у клетки в поле field с координатами cellRow, cellCol\nexport const getAliveNeighborsCount = (\n  field: boolean[][],\n  cellRow: number,\n  cellCol: number\n): number => {\n  let aliveNeighborsCount = 0,\n    wasNegativeRowOverflow = false,\n    wasNegativeColOverflow = false,\n    wasRowOverflow = false;\n  // идем по верхней, текущей и нижней строкам относительно исследуемой клетки\n  for (let row = cellRow - 1; row <= cellRow + 1; row++) {\n    if (row === -1) {\n      row = field.length - 1;\n      wasNegativeRowOverflow = true;\n    }\n\n    // если индекс текущей строки >= 0 и <= общего кол-ва строк в поле\n    if (row >= 0 && row <= field.length) {\n      if (row === field.length) {\n        row = 0;\n        wasRowOverflow = true;\n      }\n\n      // идем по левому, текущему и правому столбцам относительно исследуемой клетки\n      for (let col = cellCol - 1; col <= cellCol + 1; col++) {\n        if (col === -1) {\n          wasNegativeColOverflow = true;\n          col = field[0].length - 1;\n        }\n        // если индекс текущего столбца >= 0 и <= кол-ва элементов в текущей строке и это не текущая клетка\n        if (col >= 0 && col <= field[row].length && !(row === cellRow && col === cellCol)) {\n          if (col === field[row].length) {\n            // особый случай - переходим от последнего столбца к первому\n            aliveNeighborsCount = field[row][0] ? aliveNeighborsCount + 1 : aliveNeighborsCount;\n          } else {\n            // увеличивем кол-во \"живых\" соседей, если данная клетка живая\n            aliveNeighborsCount = field[row][col] ? aliveNeighborsCount + 1 : aliveNeighborsCount;\n          }\n        }\n        if (wasNegativeColOverflow) {\n          wasNegativeColOverflow = false;\n          col = -1;\n        }\n      }\n    }\n    if (wasNegativeRowOverflow) {\n      wasNegativeRowOverflow = false;\n      row = -1;\n    }\n\n    if (wasRowOverflow) {\n      row = field.length;\n    }\n  }\n\n  return aliveNeighborsCount;\n};\n\nexport const getNextGeneration = (field: boolean[][]): boolean[][] => {\n  // создаем новое поле на основе переданного в функцию\n  const nextGenerationField = JSON.parse(JSON.stringify(field));\n\n  // идем по всем строкам поля\n  for (let row = 0; row < field.length; row++) {\n    // идем по всем клеткам данной строки\n    for (let col = 0; col < field[row].length; col++) {\n      // определяем кол-во \"живых соседей данной клетки\"\n      const aliveNeighborsCount = getAliveNeighborsCount(field, row, col);\n      // если клетка \"мертвая\", а кол-во \"живых\" соседей рядом с ней === 3\n      if (!field[row][col] && aliveNeighborsCount === 3) {\n        // \"оживляем данную клетку\"\n        nextGenerationField[row][col] = true;\n      }\n      // иначе если клетка \"живая\" и кол-во \"живых\" соседей рядом !== 2 или 3\n      else if (field[row][col] && aliveNeighborsCount !== 2 && aliveNeighborsCount !== 3) {\n        // \"умертвляем клетку\"\n        nextGenerationField[row][col] = false;\n      }\n    }\n  }\n\n  // возвращаем новое поле\n  return nextGenerationField;\n};\n// prettier-ignore\nexport const preset1 = [\n  [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n  [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n  [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n  [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n  [false, false, true, true, false, true, false, false, false, false, false, false, false, false, false],\n  [false, true, false, false, true, true, false, false, false, false, false, false, false, false, false],\n  [false, false, true, true, false, false, false, false, false, false, false, false, false, false, false],\n  [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n  [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n  [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n  [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n  [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n  [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n  [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n  [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n];\n\n// prettier-ignore\nexport const preset2 = [\n  [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n  [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n  [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n  [false, false, false, false, false, true, true, false, false, true, true, true, true, false, false],\n  [false, false, false, false, false, false, true, false, false, true, false, false, false, false, false],\n  [false, false, false, false, false, false, true, true, true, true, false, false, false, false, false],\n  [false, false, false, false, false, false, false, false, false, true, false, false, false, false, false],\n  [false, false, false, false, false, false, false, false, false, true, false, false, false, false, false],\n  [false, false, false, false, false, false, false, false, false, true, false, false, false, false, false],\n  [false, false, false, false, false, false, false, false, false, true, false, false, false, false, false],\n  [false, false, false, false, false, true, true, true, true, true, false, false, false, false, false],\n  [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n  [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n  [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n  [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n];\n\n// prettier-ignore\nexport const preset3 = [\n  [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n  [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n  [false, false, false, false, false, false, false, false, false, false, false, true, false, false, false],\n  [false, false, false, false, true, false, false, false, false, false, true, false, false, false, false],\n  [false, false, false, false, false, true, false, false, false, true, false, false, false, false, false],\n  [false, false, false, false, false, false, true, false, true, false, false, false, false, false, false],\n  [false, false, false, false, false, false, false, true, false, false, false, false, false, false, false],\n  [false, false, false, false, false, false, true, false, true, false, false, false, false, false, false],\n  [false, false, false, false, false, true, false, false, false, true, false, false, false, false, false],\n  [false, false, false, false, true, false, false, false, false, false, true, false, false, false, false],\n  [false, false, false, false, false, false, false, false, false, false, false, true, false, false, false],\n  [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n  [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n  [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n  [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n];\n\nexport const resizeField = (\n  rowsCount: number,\n  colsCount: number,\n  field: boolean[][]\n): boolean[][] => {\n  let newField = field.slice();\n\n  if (rowsCount < field.length) {\n    newField = newField.slice(0, rowsCount);\n  } else if (rowsCount > field.length) {\n    newField.push(new Array(field[0].length).fill(false));\n  }\n\n  if (colsCount < field[0].length) {\n    newField = newField.map((row: boolean[]) => row.slice(0, row.length - 1));\n  } else if (colsCount > field[0].length) {\n    newField = newField.map((row: boolean[]) => [...row, false]);\n  }\n\n  return newField;\n};\n","import { fieldConstants } from \"./../field.constants\";\nimport { getNextGeneration as getNextGenerationHelper } from \"src/helpers\";\n\nexport const getNextGeneration = (field: boolean[][]) => {\n  return (dispatch: Function) => {\n    const nextGenerationField = getNextGenerationHelper(field);\n    dispatch({ type: fieldConstants.GET_NEXT_GENERATION, nextGenerationField });\n  };\n};\n","import { fieldConstants } from \"./../field.constants\";\nimport { resizeField as resizeFieldHelper } from \"src/helpers\";\n\nexport const resizeField = (oldField: boolean[][], newRowsCount: number, newColsCount: number) => {\n  const newField: boolean[][] = resizeFieldHelper(newRowsCount, newColsCount, oldField);\n  return (dispatch: Function) => {\n    dispatch({ type: fieldConstants.RESIZE_FIELD, newField });\n  };\n};\n","import { IFieldState } from \"src/redux/field\";\n\ninterface IAction {\n  type: string;\n  nextGenerationField: boolean[][];\n}\n\nexport const getNextGeneration = (state: IFieldState, action: IAction) => {\n  return {\n    ...state,\n    field: action.nextGenerationField,\n    previousFields: [...state.previousFields, state.field],\n  };\n};\n","import { createReducer } from \"src/helpers\";\nimport { fieldConstants } from \"./../field.constants\";\nimport { getNextGeneration } from \"./getNextGeneration\";\nimport { getPrevGeneration } from \"./getPrevGeneration\";\nimport { toggleCellAliveStatus } from \"./toggleCellAliveStatus\";\nimport { initializeField } from \"./initializeField\";\nimport { resizeField } from \"./resizeField\";\n\nconst DEFAULT_ROWS_COUNT = 15;\nconst DEFAULT_COLS_COUNT = 15;\n\nexport interface IFieldState {\n  field: boolean[][];\n  previousFields: boolean[][][];\n}\n\nconst initialState: IFieldState = {\n  field: new Array(DEFAULT_ROWS_COUNT)\n    .fill(false)\n    .map(() => new Array(DEFAULT_COLS_COUNT).fill(false)),\n  previousFields: [],\n};\n\nexport const fieldReducer = createReducer(initialState, {\n  [fieldConstants.GET_NEXT_GENERATION]: getNextGeneration,\n  [fieldConstants.GET_PREV_GENERATION]: getPrevGeneration,\n  [fieldConstants.TOGGLE_CELL_ALIVE_STATUS]: toggleCellAliveStatus,\n  [fieldConstants.INITIALIZE_FIELD]: initializeField,\n  [fieldConstants.RESIZE_FIELD]: resizeField,\n});\n","export const createReducer = (initialState: Object, handlers: any) => {\n  return function reducer(state = initialState, action: any) {\n    if (handlers.hasOwnProperty(action.type)) {\n      return handlers[action.type](state, action);\n    } else {\n      return state;\n    }\n  };\n};\n","import { IFieldState } from \"src/redux/field\";\n\nexport const getPrevGeneration = (state: IFieldState, action) => {\n  const previousFields = state.previousFields.slice();\n  const prevField = previousFields.pop();\n  return {\n    ...state,\n    field: prevField,\n    previousFields: previousFields,\n  };\n};\n","import { IFieldState } from \"src/redux/field\";\n\ninterface IAction {\n  type: string;\n  cellRow: number;\n  cellCol: number;\n}\n\nexport const toggleCellAliveStatus = (state: IFieldState, action: IAction) => {\n  const { cellRow, cellCol } = action;\n  const field = state.field.slice();\n  field[cellRow][cellCol] = !field[cellRow][cellCol];\n  return {\n    ...state,\n    field,\n  };\n};\n","import { IFieldState } from \"src/redux/field\";\n\ninterface IAction {\n  type: string;\n  initialField: boolean[][];\n}\n\nexport const initializeField = (state: IFieldState, action: IAction) => {\n  return {\n    ...state,\n    field: action.initialField,\n  };\n};\n","import { IFieldState } from \"src/redux/field\";\n\ninterface IAction {\n  type: string;\n  newField: boolean[][];\n}\n\nexport const resizeField = (state: IFieldState, action: IAction) => {\n  const { newField } = action;\n  return {\n    ...state,\n    field: newField,\n    previousFields: [...state.previousFields, state.field],\n  };\n};\n","import { combineReducers } from \"redux\";\n\nimport { fieldReducer } from \"./field\";\n\nconst rootReducer = combineReducers({\n  fieldReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\n// он тут особо не нужен, но пусть хоть dispatch в action прокидывает\nimport thunkMiddleware from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\nimport rootReducer from \"./rootReducer\";\n\nconst loggerMiddleware = createLogger();\n\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware, loggerMiddleware));\n","import React, { ReactNode } from \"react\";\nimport { withNaming } from \"@bem-react/classname\";\nimport {\n  getNextGeneration,\n  getPrevGeneration,\n  toggleCellAliveStatus,\n  initializeField,\n  resizeField,\n} from \"src/redux/field\";\nimport { connect } from \"react-redux\";\nimport \"./Main.scss\";\nimport { preset1, preset2, preset3 } from \"src/helpers\";\nimport { IState, IProps } from \"./interface\";\n\nconst cn = withNaming({ n: \"\", e: \"__\", m: \"_\", v: \"_\" });\nconst b = cn(\"main-page\");\n\nclass Main extends React.Component<IProps, IState> {\n  state = {\n    generationDescriptor: null,\n  };\n  x;\n  handlePlayClick = (): void => {\n    this.setState({ generationDescriptor: setInterval(this.updateGeneration, 1000) });\n  };\n\n  handlePauseClick = (): void => {\n    clearInterval(this.state.generationDescriptor);\n    this.setState({ generationDescriptor: null });\n  };\n\n  updateGeneration = (): void => {\n    const { field, getNextGeneration } = this.props;\n    getNextGeneration(field);\n  };\n\n  renderControls = (): ReactNode => {\n    const {\n      getPrevGeneration,\n      getNextGeneration,\n      initializeField,\n      field,\n      previousFields,\n    } = this.props;\n    const { generationDescriptor } = this.state;\n    return (\n      <>\n        <button\n          className={b(\"btn\", {\n            pause: Boolean(generationDescriptor),\n            play: !Boolean(generationDescriptor),\n          })}\n          onClick={generationDescriptor ? this.handlePauseClick : this.handlePlayClick}\n        >\n          {generationDescriptor ? \"pause\" : \"play\"}\n        </button>\n\n        <div className={b(\"title\")}>generations</div>\n        <div className={b(\"row\")}>\n          <button\n            className={b(\"btn\")}\n            onClick={previousFields.length > 0 ? getPrevGeneration : null}\n          >\n            <span className={b(\"btn-label\", { prev: true })}>prev</span>\n          </button>\n          <button className={b(\"btn\")} onClick={() => getNextGeneration(field)}>\n            <span className={b(\"btn-label\", { next: true })}>next</span>\n          </button>\n        </div>\n\n        <div className={b(\"title\")}>presets</div>\n        <div className={b(\"row\")}>\n          <button className={b(\"btn\")} onClick={() => initializeField(preset1)}>\n            preset 1\n          </button>\n          <button className={b(\"btn\")} onClick={() => initializeField(preset2)}>\n            preset 2\n          </button>\n          <button className={b(\"btn\")} onClick={() => initializeField(preset3)}>\n            preset 3\n          </button>\n        </div>\n      </>\n    );\n  };\n\n  renderField = (): ReactNode => {\n    const { field, toggleCellAliveStatus, resizeField } = this.props;\n    const rowsCount = field.length;\n    const colsCount = field[0].length;\n    return (\n      <div className={b(\"field-wrapper\")}>\n        <div className={b(\"field-controls\")}>\n          <button className={b(\"btn\")} onClick={() => resizeField(field, rowsCount, colsCount - 1)}>\n            remove column\n          </button>\n          <button className={b(\"btn\")} onClick={() => resizeField(field, rowsCount, colsCount + 1)}>\n            add column\n          </button>\n        </div>\n\n        <div className={b(\"field-controls\")}>\n          <button className={b(\"btn\")} onClick={() => resizeField(field, rowsCount - 1, colsCount)}>\n            remove row\n          </button>\n          <button className={b(\"btn\")} onClick={() => resizeField(field, rowsCount + 1, colsCount)}>\n            add row\n          </button>\n        </div>\n\n        <div className={b(\"field\")} style={{ gridTemplateColumns: `repeat(${colsCount}, 18px)` }}>\n          {field.map((row: boolean[], rowIndex: number) =>\n            row.map((cellInfo: boolean, colIndex: number) => (\n              <div\n                onClick={() => toggleCellAliveStatus(rowIndex, colIndex)}\n                key={colIndex}\n                className={b(\"cell\", { alive: cellInfo })}\n              />\n            ))\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <div className={b()}>\n        {this.renderControls()}\n        {this.renderField()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { field, previousFields } = state.fieldReducer;\n  return { field, previousFields };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  getNextGeneration: (field: boolean[][]) => dispatch(getNextGeneration(field)),\n  getPrevGeneration: () => dispatch(getPrevGeneration()),\n  toggleCellAliveStatus: (cellRow: number, cellCol: number) =>\n    dispatch(toggleCellAliveStatus(cellRow, cellCol)),\n  initializeField: (initialField: boolean[][]) => dispatch(initializeField(initialField)),\n  resizeField: (oldField: boolean[][], newRowCount: number, newColsCount: number) => {\n    if (newRowCount < 5 || newColsCount < 5) {\n      alert(\"Field can not be less than 5x5\");\n    } else {\n      dispatch(resizeField(oldField, newRowCount, newColsCount));\n    }\n  },\n});\n\nconst connectedComponent = connect(mapStateToProps, mapDispatchToProps)(Main);\n\nexport { connectedComponent as Main };\n","import { fieldConstants } from \"./../field.constants\";\n\nexport const getPrevGeneration = () => {\n  return (dispatch: Function) => {\n    dispatch({ type: fieldConstants.GET_PREV_GENERATION });\n  };\n};\n","import { fieldConstants } from \"./../field.constants\";\n\nexport const toggleCellAliveStatus = (cellRow: number, cellCol: number) => {\n  return (dispatch: Function) => {\n    dispatch({ type: fieldConstants.TOGGLE_CELL_ALIVE_STATUS, cellRow, cellCol });\n  };\n};\n","import { fieldConstants } from \"./../field.constants\";\n\nexport const initializeField = (initialField: boolean[][]) => {\n  return (dispatch: Function) => {\n    dispatch({ type: fieldConstants.INITIALIZE_FIELD, initialField });\n  };\n};\n","import React, { Component } from \"react\";\nimport \"./App.scss\";\nimport { Router, Route } from \"react-router-dom\";\nimport { history } from \"./helpers\";\nimport { withNaming } from \"@bem-react/classname\";\nimport { Main } from \"src/pages\";\nconst cn = withNaming({ n: \"\", e: \"__\", m: \"_\", v: \"_\" });\nconst b = cn(\"App\");\n\nexport class App extends Component {\n  render() {\n    return (\n      <div className={b()}>\n        <Router history={history}>\n          <Route path=\"/\" component={Main} />\n        </Router>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Provider } from \"react-redux\";\n\nimport { store } from \"src/redux/store\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}