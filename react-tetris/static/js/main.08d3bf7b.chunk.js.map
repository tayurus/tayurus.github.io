{"version":3,"sources":["constants/index.js","helpers/moveFigure.js","helpers/moveCell.js","components/Field/Field.js","components/ScoreBoard/ScoreBoard.js","App.js","helpers/generateNewField.js","helpers/rotateFigure.js","helpers/drawFigure.js","helpers/generateFigureType.js","serviceWorker.js","index.js"],"names":["FIGURES","FIGURES_ROTATE","line","r0","r1","r2","r3","cube","zipper","hook","moveFigure","field","figure","direction","rowDelta","colDelta","newPoints","_","clone","points","map","point","moveCell","includes","Object","objectSpread","rowCollisionWidthField","colCollisionWithField","Field","props","className","react_default","a","createElement","row","rowindex","key","col","colIndex","defaultProps","ScoreBoard","score","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_this2","setState","Array","fill","drawNewFigure","setInterval","tetrisMove","document","onkeydown","e","which","name","rotate","pointIndex","rotateFigure","updateFigureOnField","_this3","oldFigure","newFigure","isEqual","fixFigure","removeFullRows","newField","forEach","figureName","arguments","length","undefined","width","height","drawFigure","random","FIELD_WIDTH","alert","rowRemovedCount","every","item","i","FIELD_HEIGHT","_this$state","ScoreBoard_ScoreBoard_ScoreBoard","Field_Field_Field","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.08d3bf7b.chunk.js","sourcesContent":["export const FIGURES = [\"line\", \"zipper\", \"cube\", \"hook\"];\nexport const FIELD_WIDTH = 10;\nexport const FIELD_HEIGHT = 20;\nexport const SPAWN_ROW = 0;\nexport const SPAWN_COL = FIELD_WIDTH / 2;\nexport const FIGURES_ROTATE = {\n  line: {\n    r0: [[-1, 1], [0, 0], [1, -1], [2, -2]],\n    r1: [[1, 1], [0, 0], [-1, -1], [-2, -2]],\n    r2: [[1, -1], [0, 0], [-1, 1], [-2, 2]],\n    r3: [[-1, -1], [0, 0], [1, 1], [2, 2]]\n  },\n  cube: {\n    r0: [[0, 0], [0, 0], [0, 0], [0, 0]],\n    r1: [[0, 0], [0, 0], [0, 0], [0, 0]],\n    r2: [[0, 0], [0, 0], [0, 0], [0, 0]],\n    r3: [[0, 0], [0, 0], [0, 0], [0, 0]]\n  },\n  zipper: {\n    r0: [[-1, 1], [0, 0], [1, -1], [2, -2]],\n    r1: [[1, 1], [0, 0], [-1, 1], [-2, 0]],\n    r2: [[1, -1], [0, 0], [1, 1], [0, 2]],\n    r3: [[-1, -1], [0, 0], [-1, -1], [0, 0]]\n  },\n  hook: {\n    r0: [[-1, 1], [0, 0], [1, -1], [0, -2]],\n    r1: [[1, 1], [0, 0], [-1, -1], [-2, 0]],\n    r2: [[1, -1], [0, 0], [-1, 1], [0, 2]],\n    r3: [[-1, -1], [0, 0], [1, 1], [2, 0]]\n  }\n};\n","import _ from \"lodash\";\r\n\r\nimport { moveCell } from \"./\";\r\nexport const moveFigure = (field, figure, direction) => {\r\n  let rowDelta = 0,\r\n    colDelta = 0;\r\n  switch (direction) {\r\n    case \"left\":\r\n      colDelta = -1;\r\n      break;\r\n    case \"right\":\r\n      colDelta = 1;\r\n      break;\r\n    case \"down\":\r\n      rowDelta = 1;\r\n      break;\r\n  }\r\n  let newPoints = _.clone(figure.points);\r\n  newPoints = newPoints.map(point => moveCell(field, point, rowDelta, colDelta));\r\n  if (newPoints.includes(false)) {\r\n    return figure;\r\n  } else {\r\n    return { ...figure, points: newPoints };\r\n  }\r\n};\r\n","import { FIELD_WIDTH, FIELD_HEIGHT } from \"./../constants\";\r\n\r\nexport const moveCell = (field, point, rowDelta, colDelta) => {\r\n  const rowCollisionWidthField = point[0] + rowDelta < 0 || point[0] + rowDelta >= FIELD_HEIGHT;\r\n  const colCollisionWithField = point[1] + colDelta < 0 || point[1] + colDelta >= FIELD_WIDTH;\r\n\r\n  if (rowCollisionWidthField || colCollisionWithField) {\r\n    return false;\r\n  } else {\r\n    const collisionWithOtherFigures = field[point[0] + rowDelta][point[1] + colDelta] === 2;\r\n    if (collisionWithOtherFigures) {\r\n      return false;\r\n    }\r\n    return [point[0] + rowDelta, point[1] + colDelta];\r\n  }\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./Field.css\";\r\n\r\nexport const Field = props => {\r\n  const { field, className } = props;\r\n  return (\r\n    <table className={\"Field \" + className}>\r\n      <tbody>\r\n        {field.map((row, rowindex) => {\r\n          return (\r\n            <tr key={rowindex}>\r\n              {row.map((col, colIndex) => (\r\n                <td\r\n                  key={colIndex}\r\n                  className={\"Field__cell \" + (col === 1 ? \"Field__cell_figure\" : col === 2 ? \"Field__cell_fixed\" : \"\")}\r\n                />\r\n              ))}\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nField.defaultProps = {\r\n  className: \"\"\r\n};\r\n","import React from \"react\";\r\nimport \"./ScoreBoard.css\";\r\nexport const ScoreBoard = props => {\r\n  return (\r\n    <div className=\"ScoreBoard\">\r\n      <h2 className=\"ScoreBoard__title\">Score: {props.score}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nScoreBoard.defaultProps = {\r\n  className: \"\"\r\n};\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport _ from \"lodash\";\nimport { generateNewField, drawFigure, rotateFigure, moveFigure, moveCell, generateFigureType } from \"./helpers\";\nimport { FIELD_HEIGHT, FIELD_WIDTH, SPAWN_ROW, SPAWN_COL } from \"./constants\";\nimport { Field, ScoreBoard } from \"./components\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      field: [],\n      figure: {\n        points: []\n      },\n      score: 0\n    };\n  }\n\n  componentDidMount() {\n    this.setState(\n      {\n        field: generateNewField()\n      },\n      () => {\n        this.drawNewFigure();\n        setInterval(() => this.tetrisMove(\"down\"), 1000);\n      }\n    );\n\n    document.onkeydown = e => {\n      let direction = \"bottom\";\n      switch (e.which) {\n        case 37: // left\n          direction = \"left\";\n          break;\n        case 38: // up\n          this.setState({ figure: rotateFigure(this.state.field, this.state.figure) }, () =>\n            this.updateFigureOnField()\n          );\n          break;\n        case 39: // right\n          direction = \"right\";\n          break;\n        case 40: // down\n          direction = \"down\";\n          break;\n      }\n\n      this.tetrisMove(direction);\n    };\n  }\n\n  tetrisMove(direction) {\n    const oldFigure = _.clone(this.state.figure);\n    const newFigure = moveFigure(this.state.field, this.state.figure, direction);\n    if (_.isEqual(oldFigure, newFigure) && direction === \"down\") {\n      this.fixFigure();\n      this.removeFullRows();\n      this.drawNewFigure();\n    } else {\n      this.setState({ figure: moveFigure(this.state.field, this.state.figure, direction) }, () =>\n        this.updateFigureOnField()\n      );\n    }\n  }\n\n  updateFigureOnField() {\n    let newField = _.clone(this.state.field);\n    //remove prev figure\n    newField = newField.map(row => row.map(col => (col === 1 ? 0 : col)));\n    //draw\n    this.state.figure.points.forEach(point => (newField[point[0]][point[1]] = 1));\n    this.setState({ field: newField });\n  }\n\n  fixFigure() {\n    let newField = _.clone(this.state.field);\n    newField = newField.map(row => row.map(col => (col === 1 ? 2 : col)));\n    this.setState({ field: newField });\n  }\n\n  drawNewFigure() {\n    const newFigure = drawFigure(generateFigureType(), SPAWN_ROW, SPAWN_COL);\n    if (this.state.field[SPAWN_ROW + newFigure.height][SPAWN_COL + newFigure.width] !== 0) {\n      alert(\"GAME OVER\");\n    } else {\n      this.setState({ figure: newFigure });\n    }\n  }\n\n  removeFullRows() {\n    let newField = _.clone(this.state.field);\n    let rowRemovedCount = 0;\n\n    //remove rows\n    newField = newField.map(row => {\n      if (row.every(item => item === 2)) {\n        rowRemovedCount++;\n        return row.map(item => 0);\n      } else {\n        return row;\n      }\n    });\n\n    //drop other fixed cells on empty space\n    for (let i = 0; i < rowRemovedCount; i++) {\n      for (let row = FIELD_HEIGHT - 2; row >= 0; row--) {\n        if (newField[row + 1].every(item => item === 0)) {\n          newField[row + 1] = _.clone(newField[row]);\n          newField[row] = newField[row].map(item => (item = 0));\n        }\n      }\n    }\n\n    this.setState({ field: newField, score: this.state.score + rowRemovedCount * newField[0].length * 100 });\n  }\n\n  render() {\n    const { score, field } = this.state;\n    return (\n      <div className=\"App\">\n        <ScoreBoard score={score} />\n        <Field className=\"mx-auto my-5\" field={field} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { FIELD_WIDTH, FIELD_HEIGHT } from \"./../constants\";\r\n\r\nexport const generateNewField = () =>\r\n  Array(FIELD_HEIGHT)\r\n    .fill(0)\r\n    .map(() => Array(FIELD_WIDTH).fill(0));\r\n","import { FIGURES_ROTATE } from \"./../constants\";\r\nimport { moveCell } from \"./\";\r\n\r\nexport const rotateFigure = (field, figure) => {\r\n  const { name, rotate } = figure;\r\n\r\n  let newPoints = figure.points.map((point, pointIndex) => {\r\n    const rowDelta = FIGURES_ROTATE[name][\"r\" + ((rotate + 1) % 4)][pointIndex][0];\r\n    const colDelta = FIGURES_ROTATE[name][\"r\" + ((rotate + 1) % 4)][pointIndex][1];\r\n    return moveCell(field, point, rowDelta, colDelta);\r\n  });\r\n\r\n  if (newPoints.includes(false)) {\r\n    return figure;\r\n  }\r\n\r\n  return {\r\n    ...figure,\r\n    rotate: rotate + 1,\r\n    points: newPoints\r\n  };\r\n};\r\n","export const drawFigure = (figureName = \"line\", row = 0, col = 0) => {\r\n  switch (figureName) {\r\n    case \"line\":\r\n      return {\r\n        name: \"line\",\r\n        points: [[row, col], [row + 1, col], [row + 2, col], [row + 3, col]],\r\n        rotate: 0,\r\n        width: 1,\r\n        height: 4\r\n      };\r\n    case \"zipper\":\r\n      return {\r\n        name: \"zipper\",\r\n        points: [[row, col], [row + 1, col], [row + 1, col - 1], [row + 2, col - 1]],\r\n        rotate: 0,\r\n        width: 2,\r\n        height: 3\r\n      };\r\n    case \"cube\":\r\n      return {\r\n        name: \"cube\",\r\n        points: [[row, col], [row, col + 1], [row + 1, col], [row + 1, col + 1]],\r\n        rotate: 0,\r\n        width: 2,\r\n        height: 2\r\n      };\r\n    case \"hook\":\r\n      return {\r\n        name: \"hook\",\r\n        points: [[row, col], [row + 1, col], [row + 2, col], [row + 2, col - 1]],\r\n        rotate: 0,\r\n        width: 2,\r\n        height: 3\r\n      };\r\n  }\r\n};\r\n","import _ from \"lodash\";\r\nimport { FIGURES } from \"./../constants\";\r\nexport const generateFigureType = () => FIGURES[_.random(0, FIGURES.length - 1)];\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}