{"version":3,"sources":["serviceWorker.js","helpers/history.js","constants/alert.constants.js","constants/points.constants.js","constants/colors.js","constants/index.js","reducers/index.js","reducers/alert.reducer.js","reducers/points.reducer.js","helpers/store.js","helpers/array.js","components/PointView/PointView.js","components/PointInputs/PointInputs.js","components/Point/Point.js","components/PointAdd/PointAdd.js","helpers/arrayToObject.js","components/PointsTable/PointsTable.js","helpers/keys.js","components/Chart/Chart.js","actions/points.actions.js","pages/MainPage/MainPage.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","history","createBrowserHistory","alertConstants","ALERT_SUCCESS","ALERT_ERROR","ALERT_CLEAR","pointsConstants","ADD_POINT","REMOVE_POINT","PATCH_POINT","colors","aliceblue","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","forestgreen","fuchsia","gainsboro","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","yellow","yellowgreen","fields","rootReducer","combineReducers","alert","state","arguments","length","undefined","action","type","Object","objectSpread","message","pointsReducer","points","newPoint","point","id","colorsKeys","keys","randomColorKey","Math","floor","random","toConsumableArray","concat","removedIndex","findIndex","slice","removeArrayItem","patchedIndex","newPoints","JSON","parse","stringify","newPointData","loggerMiddleware","createLogger","store","createStore","applyMiddleware","thunkMiddleware","array","index","PointView","props","className","coordinates","color","objectWithoutProperties","react_default","a","createElement","style","backgroundColor","map","coord","defaultProps","PointInputs","handleCoordinateChange","min","max","value","onChange","e","parseInt","target","Point","_React$Component","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","inEditMode","toggleEditMode","bind","assertThisInitialized","pointPropToState","inherits","createClass","key","coordinateName","setState","defineProperty","assign","_this$props","removePoint","patchPoint","constPoint","_this$state","PointInputs_PointInputs_PointInputs","onClick","PointView_PointView_PointView","React","Component","PointAdd","inAddMode","toggleAddMode","clearCoordinatesInState","handleAddPointClick","initialValue","reduce","acc","item","_this2","forEach","addPoint","_this$state2","PointsTable","Point_Point","pre","Date","getTime","Chart","apply","dataset","w","document","querySelector","offsetWidth","h","offsetHeight","xScale","d3","domain","d","range","yScale","selectAll","remove","setTimeout","svg","append","attr","data","enter","text","xAxis","yAxis","polylinePoints","pointsActions","MainPage","PointAdd_PointAdd_PointAdd","PointsTable_PointsTable_PointsTable","Chart_Chart_Chart","connectedComponent","connect","dispatch","App","_Component","Router","Route","exact","path","component","ReactDOM","render","es","App_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5c27a944.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();","export const alertConstants = {\n  ALERT_SUCCESS: \"ALERT_SUCCESS\",\n  ALERT_ERROR: \"ALERT_ERROR\",\n  ALERT_CLEAR: \"ALERT_CLEAR\"\n};\n","export const pointsConstants = {\r\n  ADD_POINT: \"ADD_POINT\",\r\n  REMOVE_POINT: \"REMOVE_POINT\",\r\n  PATCH_POINT: \"PATCH_POINT\"\r\n};\r\n","export const colors = {\r\n  aliceblue: \"#f0f8ff\",\r\n  aqua: \"#00ffff\",\r\n  aquamarine: \"#7fffd4\",\r\n  azure: \"#f0ffff\",\r\n  beige: \"#f5f5dc\",\r\n  bisque: \"#ffe4c4\",\r\n  black: \"#000000\",\r\n  blanchedalmond: \"#ffebcd\",\r\n  blue: \"#0000ff\",\r\n  blueviolet: \"#8a2be2\",\r\n  brown: \"#a52a2a\",\r\n  burlywood: \"#deb887\",\r\n  cadetblue: \"#5f9ea0\",\r\n  chartreuse: \"#7fff00\",\r\n  chocolate: \"#d2691e\",\r\n  coral: \"#ff7f50\",\r\n  cornflowerblue: \"#6495ed\",\r\n  cornsilk: \"#fff8dc\",\r\n  crimson: \"#dc143c\",\r\n  cyan: \"#00ffff\",\r\n  darkblue: \"#00008b\",\r\n  darkcyan: \"#008b8b\",\r\n  darkgoldenrod: \"#b8860b\",\r\n  darkgray: \"#a9a9a9\",\r\n  darkgreen: \"#006400\",\r\n  darkgrey: \"#a9a9a9\",\r\n  darkkhaki: \"#bdb76b\",\r\n  darkmagenta: \"#8b008b\",\r\n  darkolivegreen: \"#556b2f\",\r\n  darkorange: \"#ff8c00\",\r\n  darkorchid: \"#9932cc\",\r\n  darkred: \"#8b0000\",\r\n  darksalmon: \"#e9967a\",\r\n  darkseagreen: \"#8fbc8f\",\r\n  darkslateblue: \"#483d8b\",\r\n  darkslategray: \"#2f4f4f\",\r\n  darkslategrey: \"#2f4f4f\",\r\n  darkturquoise: \"#00ced1\",\r\n  darkviolet: \"#9400d3\",\r\n  deeppink: \"#ff1493\",\r\n  deepskyblue: \"#00bfff\",\r\n  dimgray: \"#696969\",\r\n  dimgrey: \"#696969\",\r\n  dodgerblue: \"#1e90ff\",\r\n  firebrick: \"#b22222\",\r\n  forestgreen: \"#228b22\",\r\n  fuchsia: \"#ff00ff\",\r\n  gainsboro: \"#dcdcdc\",\r\n  gold: \"#ffd700\",\r\n  goldenrod: \"#daa520\",\r\n  gray: \"#808080\",\r\n  green: \"#008000\",\r\n  greenyellow: \"#adff2f\",\r\n  grey: \"#808080\",\r\n  honeydew: \"#f0fff0\",\r\n  hotpink: \"#ff69b4\",\r\n  indianred: \"#cd5c5c\",\r\n  indigo: \"#4b0082\",\r\n  ivory: \"#fffff0\",\r\n  khaki: \"#f0e68c\",\r\n  lavender: \"#e6e6fa\",\r\n  lavenderblush: \"#fff0f5\",\r\n  lawngreen: \"#7cfc00\",\r\n  lemonchiffon: \"#fffacd\",\r\n  lightblue: \"#add8e6\",\r\n  lightcoral: \"#f08080\",\r\n  lightcyan: \"#e0ffff\",\r\n  lightgoldenrodyellow: \"#fafad2\",\r\n  lightgray: \"#d3d3d3\",\r\n  lightgreen: \"#90ee90\",\r\n  lightgrey: \"#d3d3d3\",\r\n  lightpink: \"#ffb6c1\",\r\n  lightsalmon: \"#ffa07a\",\r\n  lightseagreen: \"#20b2aa\",\r\n  lightskyblue: \"#87cefa\",\r\n  lightslategray: \"#778899\",\r\n  lightslategrey: \"#778899\",\r\n  lightsteelblue: \"#b0c4de\",\r\n  lightyellow: \"#ffffe0\",\r\n  lime: \"#00ff00\",\r\n  limegreen: \"#32cd32\",\r\n  linen: \"#faf0e6\",\r\n  magenta: \"#ff00ff\",\r\n  maroon: \"#800000\",\r\n  mediumaquamarine: \"#66cdaa\",\r\n  mediumblue: \"#0000cd\",\r\n  mediumorchid: \"#ba55d3\",\r\n  mediumpurple: \"#9370db\",\r\n  mediumseagreen: \"#3cb371\",\r\n  mediumslateblue: \"#7b68ee\",\r\n  mediumspringgreen: \"#00fa9a\",\r\n  mediumturquoise: \"#48d1cc\",\r\n  mediumvioletred: \"#c71585\",\r\n  midnightblue: \"#191970\",\r\n  mintcream: \"#f5fffa\",\r\n  mistyrose: \"#ffe4e1\",\r\n  moccasin: \"#ffe4b5\",\r\n  navy: \"#000080\",\r\n  oldlace: \"#fdf5e6\",\r\n  olive: \"#808000\",\r\n  olivedrab: \"#6b8e23\",\r\n  orange: \"#ffa500\",\r\n  orangered: \"#ff4500\",\r\n  orchid: \"#da70d6\",\r\n  palegoldenrod: \"#eee8aa\",\r\n  palegreen: \"#98fb98\",\r\n  paleturquoise: \"#afeeee\",\r\n  palevioletred: \"#db7093\",\r\n  papayawhip: \"#ffefd5\",\r\n  peachpuff: \"#ffdab9\",\r\n  peru: \"#cd853f\",\r\n  pink: \"#ffc0cb\",\r\n  plum: \"#dda0dd\",\r\n  powderblue: \"#b0e0e6\",\r\n  purple: \"#800080\",\r\n  rebeccapurple: \"#663399\",\r\n  red: \"#ff0000\",\r\n  rosybrown: \"#bc8f8f\",\r\n  royalblue: \"#4169e1\",\r\n  saddlebrown: \"#8b4513\",\r\n  salmon: \"#fa8072\",\r\n  sandybrown: \"#f4a460\",\r\n  seagreen: \"#2e8b57\",\r\n  seashell: \"#fff5ee\",\r\n  sienna: \"#a0522d\",\r\n  silver: \"#c0c0c0\",\r\n  skyblue: \"#87ceeb\",\r\n  slateblue: \"#6a5acd\",\r\n  slategray: \"#708090\",\r\n  slategrey: \"#708090\",\r\n  snow: \"#fffafa\",\r\n  springgreen: \"#00ff7f\",\r\n  steelblue: \"#4682b4\",\r\n  tan: \"#d2b48c\",\r\n  teal: \"#008080\",\r\n  thistle: \"#d8bfd8\",\r\n  tomato: \"#ff6347\",\r\n  turquoise: \"#40e0d0\",\r\n  violet: \"#ee82ee\",\r\n  wheat: \"#f5deb3\",\r\n  yellow: \"#ffff00\",\r\n  yellowgreen: \"#9acd32\"\r\n};\r\n","export * from \"./alert.constants\";\r\nexport * from \"./points.constants\";\r\nexport * from \"./colors\";\r\n\r\nexport const fields = [\"x\", \"y\"];\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport { alert } from \"./alert.reducer.js\";\r\nimport { pointsReducer } from \"./points.reducer.js\";\r\n\r\nconst rootReducer = combineReducers({\r\n  alert,\r\n  pointsReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { alertConstants } from \"./../constants\";\r\n\r\nexport function alert(state = {}, action) {\r\n  switch (action.type) {\r\n    case alertConstants.ALERT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        type: \"alert-success\",\r\n        message: action.message\r\n      };\r\n    case alertConstants.ALERT_ERROR:\r\n      return {\r\n        ...state,\r\n        type: \"alert-danger\",\r\n        message: action.message\r\n      };\r\n    case alertConstants.ALERT_CLEAR:\r\n      return { ...state };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { pointsConstants, colors } from \"./../constants\";\r\n\r\nimport { removeArrayItem } from \"./../helpers\";\r\n\r\nexport function pointsReducer(state = { points: [] }, action) {\r\n  switch (action.type) {\r\n    case pointsConstants.ADD_POINT:\r\n      let newPoint = action.point;\r\n      newPoint.id = state.points.length;\r\n      const colorsKeys = Object.keys(colors);\r\n      let randomColorKey =\r\n        colorsKeys[Math.floor(Math.random() * colorsKeys.length)];\r\n      newPoint[\"color\"] = colors[randomColorKey];\r\n\r\n      return {\r\n        ...state,\r\n        points: [...state.points, action.point]\r\n      };\r\n\r\n    case pointsConstants.REMOVE_POINT:\r\n      const removedIndex = state.points.findIndex(\r\n        point => point.id === action.id\r\n      );\r\n\r\n      state.points.slice(0, removedIndex).slice(removedIndex + 1);\r\n\r\n      return {\r\n        ...state,\r\n        points: removeArrayItem(state.points, removedIndex)\r\n      };\r\n    case pointsConstants.PATCH_POINT:\r\n      const patchedIndex = state.points.findIndex(\r\n        point => point.id === action.id\r\n      );\r\n      const newPoints = JSON.parse(JSON.stringify(state.points));\r\n      newPoints[patchedIndex] = action.newPointData;\r\n      return { ...state, points: newPoints };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\nimport rootReducer from \"./../reducers\";\n\nconst loggerMiddleware = createLogger();\n\nexport const store = createStore(\n  rootReducer,\n  applyMiddleware(thunkMiddleware, loggerMiddleware)\n);\n","export const removeArrayItem = (array, index) => {\r\n  return array.slice(0, index).concat(array.slice(index + 1));\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./PointView.css\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const PointView = props => {\r\n  const { point, className } = props;\r\n  const { color, ...coordinates } = point;\r\n  return (\r\n    <div className={\"PointView \" + className}>\r\n      <div className=\"d-flex align-items-center\">\r\n        <div\r\n          className=\"PointView__color mx-2\"\r\n          style={{ backgroundColor: point.color }}\r\n        />\r\n\r\n        {Object.keys(coordinates).map(coord => (\r\n          <div className=\"d-flex mx-2\">\r\n            <div className=\"mx-1\">{coord + \":\"}</div>\r\n            <div>{coordinates[coord]}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nPointView.propTypes = {\r\n  point: PropTypes.object.isRequired\r\n};\r\n\r\nPointView.defaultProps = {\r\n  className: \"\"\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./PointInputs.css\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const PointInputs = props => {\r\n  const { className, coordinates, handleCoordinateChange } = props;\r\n  return (\r\n    <div className={\"PointInputs \" + className}>\r\n      <div className=\"d-flex\">\r\n        {Object.keys(coordinates).map(coord => (\r\n          <div className=\"d-flex align-items-center mx-3\">\r\n            <div className=\"mx-3\">{coord}</div>\r\n            <input\r\n              type=\"number\"\r\n              className=\"PointInputs__field\"\r\n              min=\"0\"\r\n              max=\"1000\"\r\n              value={coordinates[coord]}\r\n              onChange={e =>\r\n                handleCoordinateChange(coord, parseInt(e.target.value))\r\n              }\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nPointInputs.propTypes = {\r\n  coordinates: PropTypes.object.isRequired,\r\n  handleCoordinateChange: PropTypes.func.isRequired\r\n};\r\n\r\nPointInputs.defaultProps = {\r\n  className: \"\"\r\n};\r\n","import React from \"react\";\r\n\r\nimport { PointView, PointInputs } from \"./../index\";\r\n\r\nexport class Point extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      inEditMode: false\r\n    };\r\n\r\n    this.toggleEditMode = this.toggleEditMode.bind(this);\r\n    this.handleCoordinateChange = this.handleCoordinateChange.bind(this);\r\n    this.pointPropToState = this.pointPropToState.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.pointPropToState();\r\n  }\r\n\r\n  handleCoordinateChange(coordinateName, value) {\r\n    this.setState({ point: { ...this.state.point, [coordinateName]: value } });\r\n  }\r\n\r\n  pointPropToState() {\r\n    const point = Object.assign({}, this.props.point);\r\n    this.setState({ point: point });\r\n  }\r\n\r\n  toggleEditMode() {\r\n    this.setState({ inEditMode: !this.state.inEditMode });\r\n    this.pointPropToState();\r\n  }\r\n\r\n  render() {\r\n    const { className, removePoint, patchPoint } = this.props;\r\n    const constPoint = this.props.point;\r\n    const { inEditMode, point } = this.state;\r\n    const { id, color, ...coordinates } = point;\r\n\r\n    return (\r\n      <div className={\"Point \" + className}>\r\n        {!inEditMode ? (\r\n          <div className=\"d-flex\">\r\n            <PointView point={constPoint} />\r\n            <div className=\"d-flex\">\r\n              <button\r\n                className=\"btn btn-primary mx-2\"\r\n                onClick={this.toggleEditMode}\r\n              >\r\n                ✎\r\n              </button>\r\n              <button\r\n                className=\"btn btn-danger mx-2\"\r\n                onClick={() => removePoint(id)}\r\n              >\r\n                ❌\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"d-flex\">\r\n            <PointInputs\r\n              coordinates={coordinates}\r\n              handleCoordinateChange={this.handleCoordinateChange}\r\n            />\r\n            <div className=\"d-flex\">\r\n              <button\r\n                className=\"btn btn-success mx-2\"\r\n                onClick={() => patchPoint(id, point)}\r\n              >\r\n                ✓\r\n              </button>\r\n              <button\r\n                className=\"btn btn-primary mx-2\"\r\n                onClick={this.toggleEditMode}\r\n              >\r\n                cancel\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPoint.defaultProps = {\r\n  className: \"\"\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./PointAdd.css\";\r\n\r\nimport { PointInputs } from \"./../index\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { arrayToObject } from \"./../../helpers\";\r\n\r\nexport class PointAdd extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      inAddMode: false\r\n    };\r\n\r\n    this.handleCoordinateChange = this.handleCoordinateChange.bind(this);\r\n    this.toggleAddMode = this.toggleAddMode.bind(this);\r\n    this.clearCoordinatesInState = this.clearCoordinatesInState.bind(this);\r\n    this.handleAddPointClick = this.handleAddPointClick.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.setState(arrayToObject(this.props.fields, 0));\r\n  }\r\n\r\n  handleCoordinateChange(coordinateName, value) {\r\n    this.setState({ [coordinateName]: value });\r\n  }\r\n\r\n  clearCoordinatesInState() {\r\n    this.props.fields.forEach(item => this.setState({ [item]: 0 }));\r\n  }\r\n\r\n  toggleAddMode() {\r\n    this.setState({ inAddMode: !this.state.inAddMode });\r\n    this.clearCoordinatesInState();\r\n  }\r\n\r\n  handleAddPointClick() {\r\n    const { addPoint } = this.props;\r\n    const { inAddMode, ...newPoint } = this.state;\r\n    addPoint(newPoint);\r\n  }\r\n\r\n  render() {\r\n    const { className } = this.props;\r\n    const { inAddMode, ...coordinates } = this.state;\r\n\r\n    return (\r\n      <div className={\"PointAdd \" + className}>\r\n        {!inAddMode ? (\r\n          <button className=\"btn btn-success\" onClick={this.toggleAddMode}>\r\n            Add point\r\n          </button>\r\n        ) : (\r\n          <div className=\"d-flex\">\r\n            <PointInputs\r\n              coordinates={coordinates}\r\n              handleCoordinateChange={this.handleCoordinateChange}\r\n            />\r\n            <div className=\"d-flex\">\r\n              <button\r\n                className=\"btn btn-success mx-2\"\r\n                onClick={this.handleAddPointClick}\r\n              >\r\n                ✓\r\n              </button>\r\n              <button\r\n                className=\"btn btn-primary mx-2\"\r\n                onClick={this.toggleAddMode}\r\n              >\r\n                cancel\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPointAdd.propTypes = {\r\n  fields: PropTypes.array.isRequired,\r\n  addPoint: PropTypes.func.isRequired\r\n};\r\n\r\nPointAdd.defaultProps = {\r\n  className: \"\"\r\n};\r\n","export const arrayToObject = (array, initialValue) => {\r\n  return array.reduce((acc, item) => {\r\n    acc[item] = initialValue;\r\n    return acc;\r\n  }, {});\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./PointsTable.css\";\r\n\r\nimport { generateKey } from \"./../../helpers\";\r\n\r\nimport { Point } from \"./../index\";\r\n\r\nexport const PointsTable = props => {\r\n  const { points, removePoint, patchPoint } = props;\r\n\r\n  return (\r\n    <div className=\"PointsTable\">\r\n      {points.map((point, index) => (\r\n        <Point\r\n          className=\"m-2\"\r\n          key={generateKey(index)}\r\n          point={point}\r\n          removePoint={removePoint}\r\n          patchPoint={patchPoint}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","export const generateKey = pre => {\r\n  return `${pre}_${new Date().getTime()}`;\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./Chart.css\";\r\n\r\nimport * as d3 from \"d3\";\r\n\r\nexport class Chart extends React.Component {\r\n  componentDidUpdate() {\r\n    const dataset = this.props.points;\r\n    const w = document.querySelector(\".Chart\").offsetWidth;\r\n    const h = document.querySelector(\".Chart\").offsetHeight;\r\n\r\n    const padding = 60;\r\n\r\n    const xScale = d3\r\n      .scaleLinear()\r\n      .domain([0, d3.max(dataset, d => d[\"x\"])])\r\n      .range([padding, w - padding]);\r\n\r\n    const yScale = d3\r\n      .scaleLinear()\r\n      .domain([0, d3.max(dataset, d => d[\"y\"])])\r\n      .range([h - padding, padding]);\r\n\r\n    d3.select(\".Chart\")\r\n      .selectAll(\"svg\")\r\n      .remove();\r\n\r\n    setTimeout(() => {});\r\n\r\n    const svg = d3\r\n      .select(\".Chart\")\r\n      .append(\"svg\")\r\n      .attr(\"width\", w)\r\n      .attr(\"height\", h)\r\n      .style(\"background-color\", \"#ccc\");\r\n\r\n    svg\r\n      .selectAll(\"circle\")\r\n      .data(dataset)\r\n      .enter()\r\n      .append(\"circle\")\r\n      .attr(\"cx\", d => xScale(d[\"x\"]))\r\n      .attr(\"cy\", d => yScale(d[\"y\"]))\r\n      .attr(\"r\", d => 5)\r\n      .attr(\"fill\", d => d[\"color\"]);\r\n\r\n    svg\r\n      .selectAll(\"text\")\r\n      .data(dataset)\r\n      .enter()\r\n      .append(\"text\")\r\n      .text(d => d[\"x\"] + \",\" + d[\"y\"])\r\n      .attr(\"x\", d => xScale(d[\"x\"]) + 10)\r\n      .attr(\"y\", d => yScale(d[\"y\"]));\r\n\r\n    const xAxis = d3.axisBottom(xScale);\r\n\r\n    const yAxis = d3.axisLeft(yScale);\r\n\r\n    svg\r\n      .append(\"g\")\r\n      .attr(\"transform\", \"translate(0,\" + (h - padding) + \")\")\r\n      .call(xAxis);\r\n\r\n    svg\r\n      .append(\"g\")\r\n      .attr(\"transform\", \"translate(\" + padding + \",\" + 0 + \")\")\r\n      .call(yAxis);\r\n\r\n    const polylinePoints = dataset.reduce((acc, point) => {\r\n      return acc + xScale(point[\"x\"]) + \",\" + yScale(point[\"y\"]) + \" \";\r\n    }, \"\");\r\n\r\n    svg\r\n      .append(\"polyline\")\r\n      .attr(\"points\", polylinePoints)\r\n      .attr(\"stroke-width\", \"2\")\r\n      .attr(\"stroke\", \"#000\")\r\n      .attr(\"fill\", \"none\");\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"Chart\" />;\r\n  }\r\n}\r\n","import { pointsConstants } from \"./../constants\";\r\n\r\nexport const pointsActions = {\r\n  addPoint,\r\n  removePoint,\r\n  patchPoint\r\n};\r\n\r\nfunction addPoint(point) {\r\n  return { type: pointsConstants.ADD_POINT, point };\r\n}\r\n\r\nfunction removePoint(id) {\r\n  return { type: pointsConstants.REMOVE_POINT, id };\r\n}\r\n\r\nfunction patchPoint(id, newPointData) {\r\n  return { type: pointsConstants.PATCH_POINT, id, newPointData };\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./MainPage.css\";\r\n\r\nimport {\r\n  PointView,\r\n  PointInputs,\r\n  PointAdd,\r\n  Point,\r\n  PointsTable,\r\n  Chart\r\n} from \"./../../components\";\r\nimport { fields } from \"./../../constants\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { pointsActions } from \"./../../actions\";\r\n\r\nclass MainPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    // actions\r\n    const { addPoint, removePoint, patchPoint } = this.props;\r\n\r\n    //data\r\n    const { points } = this.props;\r\n\r\n    return (\r\n      <div className=\"MainPage\">\r\n        <div>\r\n          <PointAdd fields={fields} className=\"m-4\" addPoint={addPoint} />\r\n          <PointsTable\r\n            points={points}\r\n            removePoint={removePoint}\r\n            patchPoint={patchPoint}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Chart points={points} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { points } = state.pointsReducer;\r\n\r\n  return { points };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    addPoint: point => dispatch(pointsActions.addPoint(point)),\r\n    removePoint: id => dispatch(pointsActions.removePoint(id)),\r\n    patchPoint: (id, newPointData) =>\r\n      dispatch(pointsActions.patchPoint(id, newPointData))\r\n  };\r\n}\r\n\r\nconst connectedComponent = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MainPage);\r\n\r\nexport { connectedComponent as MainPage };\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./App.css\";\r\n\r\nimport { Router, Route } from \"react-router-dom\";\r\n\r\nimport { history } from \"./helpers\";\r\n\r\nimport { MainPage } from \"./pages\";\r\n\r\nexport class App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Router history={history}>\r\n          <div>\r\n            <Route exact path=\"/\" component={MainPage} />\r\n          </div>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Provider } from \"react-redux\";\n\nimport { store } from \"./helpers\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}