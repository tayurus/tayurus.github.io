{"version":3,"sources":["images/card/example.jpg","constants/card.constants.js","constants/api.js","reducers/card.reducer.js","helpers/store.js","components/card/index.js","helpers/detectCurrency.js","components/cardsGrid/index.js","components/button/index.js","components/header/index.js","services/card.services.js","actions/card.actions.js","containers/MainPage/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","cardConstants","api","initialState","cards","paginationIndex","store","createStore","state","arguments","length","undefined","action","type","Object","objectSpread","loading","error","total","limit","applyMiddleware","thunkMiddleware","logger","Card","_ref","title","price","area","sotki","currency","badge","console","log","react_default","a","createElement","className","style","backgroundImage","exampleHouse","RUB","USD","EUR","detectCurrency","toLocaleString","backgroundColor","color","defaultProps","square","CardsGrid","_React$Component","props","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","inherits","createClass","key","value","map","card","index","card_Card","assign","React","Component","Button","label","onClick","Header","href","item","button_Button","_callee","offset","data","_args","regenerator_default","wrap","_context","prev","next","fetch","sent","abrupt","json","stop","cardsService","getCards","cardsActions","dispatch","then","res","errors","items","pagination","catch","err","MainPage","_this","handlePaginationItemClick","bind","assertThisInitialized","_this$props","alert","kind","saleOffer","specification","toFixed","_this$props2","header_Header","cardsGrid_CardsGrid","lib","parseInt","activePage","onSelect","maxButtons","size","connectedPage","connect","App","Boolean","window","location","hostname","match","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.af2efd81.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/example.294fbce3.jpg\";","export const cardConstants = {\r\n  GET_CARDS_REQUEST: \"GET_CARDS_REQUEST\",\r\n  GET_CARDS_FAILURE: \"GET_CARDS_FAILURE\",\r\n  GET_CARDS_SUCCESS: \"GET_CARDS_SUCCESS\"\r\n};\r\n","export const api = \"https://api.jqestate.ru\";\n","import { cardConstants } from \"./../constants\";\r\n\r\nconst initialState = { cards: [], paginationIndex: 1 };\r\nexport const cardReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case cardConstants.GET_CARDS_REQUEST:\r\n      return { ...state, loading: true, error: false };\r\n\r\n    case cardConstants.GET_CARDS_FAILURE:\r\n      return { ...state, loading: false, error: true };\r\n\r\n    case cardConstants.GET_CARDS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        cards: action.cards,\r\n        total: action.total,\r\n        limit: action.limit,\r\n        paginationIndex: action.paginationIndex,\r\n        loading: false,\r\n        error: false\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n  return state;\r\n};\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { logger } from \"redux-logger\";\r\n\r\n//reducers\r\nimport { cardReducer } from \"./../reducers\";\r\n\r\nexport const store = createStore(cardReducer, applyMiddleware(thunkMiddleware, logger));\r\n","import React from \"react\";\r\nimport \"./card.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport exampleHouse from \"./../../images/card/example.jpg\";\r\nimport { detectCurrency } from \"./../../helpers\";\r\n\r\nexport const Card = ({ title, price, area, sotki, currency, badge }) => {\r\n  console.log(badge);\r\n  return (\r\n    <div className=\"card\">\r\n      <div\r\n        className=\"card__image\"\r\n        style={{\r\n          backgroundImage: \"url(\" + exampleHouse + \")\"\r\n        }}\r\n      />\r\n      <div className=\"card__title\">{title}</div>\r\n      <div className=\"card__price\">\r\n        {detectCurrency(currency)}\r\n        {price.toLocaleString()}\r\n      </div>\r\n      <div className=\"card__area\">\r\n        <div className=\"card__sotki\">{sotki} сот</div>\r\n        <div className=\"card__square\">\r\n          {area} м<sup>2</sup>\r\n        </div>\r\n      </div>\r\n      {badge && (\r\n        <div className=\"card__badge\" style={{ backgroundColor: badge.color }}>\r\n          {badge.title}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  price: PropTypes.string.isRequired,\r\n  sotki: PropTypes.string.isRequired,\r\n  square: PropTypes.string.isRequired\r\n};\r\n\r\nCard.defaultProps = {\r\n  title: \"Дом\",\r\n  price: \"100 000\",\r\n  sotki: \"3\",\r\n  square: \"100\"\r\n};\r\n","export const detectCurrency = currency => {\r\n  let table = {\r\n    RUB: \"₽\",\r\n    USD: \"$\",\r\n    EUR: \"€\"\r\n  };\r\n\r\n  return table[currency];\r\n};\r\n","import React from \"react\";\r\nimport \"./cardsGrid.css\";\r\n\r\nimport { Card } from \"./../\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class CardsGrid extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const { cards } = this.props;\r\n    return (\r\n      <div className=\"cards-grid\">\r\n        {cards.map((card, index) => (\r\n          <Card key={index} {...card} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCardsGrid.propTypes = {\r\n  cards: PropTypes.array\r\n};\r\n\r\nCardsGrid.defaultProps = {\r\n  cards: []\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./button.css\";\r\n\r\nexport const Button = props => {\r\n  const { className, label, onClick } = props;\r\n  return (\r\n    <button className={\"button \" + className} onClick={onClick}>\r\n      {label}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  className: PropTypes.string,\r\n  label: PropTypes.string.isRequired,\r\n  onClick: PropTypes.function\r\n};\r\n\r\nButton.defaultProps = {\r\n  className: \"\",\r\n  label: \"label\",\r\n  onClick: () => {}\r\n};\r\n","import React from \"react\";\r\nimport \"./header.css\";\r\n\r\nimport { Button } from \"./../button/\";\r\n\r\nexport const Header = props => {\r\n  const navItems = [\"Аренда\", \"Продажа\", \"Поселки\", \"О компании\"];\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header__inner\">\r\n        <nav className=\"header__nav\">\r\n          <ul>\r\n            <li href=\"#\">\r\n              <a href=\"#\" className=\"header__logo\" />\r\n            </li>\r\n            {navItems.map((item, index) => (\r\n              <li key={index}>\r\n                <a href=\"#\" className=\"header__nav-item\">\r\n                  {item}\r\n                </a>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </nav>\r\n        <div className=\"header__feedback\">\r\n          <a href=\"tel:+7 (495) 023-49-901\" className=\"header__nav-item\">\r\n            +7 (495) 023-49-901\r\n          </a>\r\n          <Button label=\"Обратный звонок\" className=\"button_green\" />\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n","import { api } from \"./../constants\";\r\n\r\nasync function getCards(offset = 0) {\r\n  const data = await fetch(api + \"/v1/properties/country?pagination[offset]=\" + offset);\r\n  return data.json();\r\n}\r\n\r\nexport const cardsService = {\r\n  getCards\r\n};\r\n","import { cardConstants } from \"./../constants\";\r\nimport { cardsService } from \"./../services\";\r\n\r\nconst getCards = (offset, paginationIndex) => {\r\n  return dispatch => {\r\n    dispatch({ type: cardConstants.GET_CARDS_REQUEST });\r\n\r\n    cardsService\r\n      .getCards(offset)\r\n      .then(res => {\r\n        if (typeof res.errors !== \"undefined\") {\r\n          dispatch({ type: cardConstants.GET_CARDS_FAILURE });\r\n        } else {\r\n          dispatch({\r\n            type: cardConstants.GET_CARDS_SUCCESS,\r\n            cards: res.items,\r\n            total: res.pagination.total,\r\n            limit: res.pagination.limit,\r\n            paginationIndex: paginationIndex\r\n          });\r\n        }\r\n      })\r\n      .catch(err => dispatch({ type: cardConstants.GET_CARDS_FAILURE }));\r\n  };\r\n};\r\n\r\nexport const cardsActions = {\r\n  getCards\r\n};\r\n","import React, { Component } from \"react\";\r\nimport \"./MainPage.css\";\r\nimport { Pagination, Preloader } from \"react-materialize\";\r\nimport { connect } from \"react-redux\";\r\nimport { Card, CardsGrid, Header } from \"./../../components\";\r\nimport { cardsActions } from \"./../../actions\";\r\n\r\nclass MainPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handlePaginationItemClick = this.handlePaginationItemClick.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { dispatch } = this.props;\r\n    dispatch(cardsActions.getCards(0));\r\n  }\r\n\r\n  handlePaginationItemClick(paginationIndex) {\r\n    const { dispatch, limit } = this.props;\r\n    dispatch(cardsActions.getCards((paginationIndex - 1) * limit, paginationIndex));\r\n  }\r\n\r\n  render() {\r\n    if (this.props.error) {\r\n      alert(\"При загрузке произошла ошибка!\");\r\n      return <div />;\r\n    } else if (!this.props.loading) {\r\n      const cards = this.props.cards.map(card => ({\r\n        title: card.kind,\r\n        currency: card.saleOffer ? card.saleOffer.currency : \"none\",\r\n        price: card.saleOffer ? card.saleOffer.price : \"none\",\r\n        area: card.specification.area,\r\n        badge: card.badge,\r\n        sotki: (card.specification.area / 100).toFixed(1)\r\n      }));\r\n\r\n      const { total, limit, paginationIndex } = this.props;\r\n      return (\r\n        <div className=\"main-page\">\r\n          <Header />\r\n          <CardsGrid cards={cards} />\r\n          <Pagination\r\n            className=\"main-page__pagination\"\r\n            items={parseInt(total / limit) + (total > limit && total % limit ? 1 : 0)}\r\n            activePage={paginationIndex}\r\n            onSelect={this.handlePaginationItemClick}\r\n            maxButtons={8}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"main-page main-page_loading\">\r\n        <Preloader size=\"big\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { cards, total, limit, loading, paginationIndex, error } = state;\r\n\r\n  return {\r\n    cards,\r\n    total,\r\n    limit,\r\n    loading,\r\n    paginationIndex,\r\n    error\r\n  };\r\n}\r\n\r\nconst connectedPage = connect(\r\n  mapStateToProps,\r\n  null\r\n)(MainPage);\r\n\r\nexport { connectedPage as MainPage };\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport { MainPage } from \"./containers\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return <MainPage />;\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./helpers\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}