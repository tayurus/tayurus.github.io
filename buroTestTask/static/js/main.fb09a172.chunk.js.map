{"version":3,"sources":["components/Header/img/logo.svg","serviceWorker.js","helpers/history.tsx","constants/form.constants.tsx","reducers/form.reducer.tsx","reducers/index.tsx","helpers/store.tsx","components/Header/Header.tsx","components/Input/Input.tsx","components/Steps/Steps.tsx","actions/form.actions.tsx","pages/Main/Main.tsx","App.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","history","createBrowserHistory","formConstants","STEP_CHANGED","STEP_LOAD_SUCCESS","initialState","currentStep","isStepLoading","rootReducer","combineReducers","form","state","arguments","length","undefined","action","console","log","type","Object","objectSpread","loggerMiddleware","createLogger","store","createStore","applyMiddleware","thunkMiddleware","b","withNaming","n","e","m","v","cn","menu","react_default","a","createElement","Item","key","href","Header","props","className","src","logo","es_button","size","icon","avatar","style","backgroundColor","dropdown","overlay","trigger","fontSize","color","marginTop","Input","title","tip","input","Step","AntdSteps","Steps","steps","es_steps","direction","current","map","stepData","index","description","subTitle","formActions","changeStep","stepLoaded","Dragger","Upload","Main","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","renderNalogRadio","es_radio","Group","value","renderFileInputs","renderBreadcrumbs","breadcrumb","renderAside","_this$props","generateButton","Fragment","onClick","disabled","Steps_Steps_Steps","Input_Input_Input","divider","Component","connectedComponent","connect","_state$form","dispatch","setTimeout","App","_Component","apply","inherits","createClass","Header_Header_Header","Router","Route","exact","path","component","ReactDOM","render","es","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fb09a172.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c3ca7607.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();","export const formConstants = {\r\n  STEP_CHANGED: \"STEP_CHANGED\",\r\n  STEP_LOAD_SUCCESS: \"STEP_LOAD_SUCCESS\"\r\n};\r\n","import { formConstants } from \"./../constants\";\r\n\r\nconst initialState = {\r\n  currentStep: 0,\r\n  isStepLoading: false\r\n};\r\n\r\nexport function form(state = initialState, action: any) {\r\n  console.log(\"form reducer here, action = \", action);\r\n  switch (action.type) {\r\n    case formConstants.STEP_CHANGED:\r\n      return {\r\n        ...state,\r\n        isStepLoading: true\r\n      };\r\n    case formConstants.STEP_LOAD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isStepLoading: false,\r\n        currentStep: (state.currentStep + 1) % 5\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\n\nimport { form } from \"./form.reducer\";\n\nconst rootReducer = combineReducers({\n  form\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\nimport rootReducer from \"./../reducers\";\n\nconst loggerMiddleware = createLogger();\n\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware, loggerMiddleware));\n","import React from \"react\";\r\nimport { withNaming } from \"@bem-react/classname\";\r\nimport logo from \"./img/logo.svg\";\r\nimport \"./Header.scss\";\r\n\r\nimport { Menu, Dropdown, Icon, Button, Avatar } from \"antd\";\r\n\r\nconst cn = withNaming({ n: \"\", e: \"__\", m: \"_\", v: \"_\" });\r\nconst b = cn(\"site-header\");\r\n\r\nconst menu = (\r\n  <Menu>\r\n    <Menu.Item key=\"0\">\r\n      <a href=\"http://www.alipay.com/\">Личный кабинет</a>\r\n    </Menu.Item>\r\n    <Menu.Item key=\"1\">\r\n      <a href=\"http://www.taobao.com/\">Выйти</a>\r\n    </Menu.Item>\r\n  </Menu>\r\n);\r\n\r\nexport const Header = (props: any) => {\r\n  return (\r\n    <header className={b()}>\r\n      <div className={b(\"inner\")}>\r\n        <div className={b(\"logo-wrapper\")}>\r\n          <img src={logo} />\r\n          <div>\r\n            <Button size=\"small\" className={b(\"save\")}>\r\n              Сохранить\r\n            </Button>\r\n            <Button icon=\"delete\" className={b(\"delete\")} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className={b(\"menu\")}>\r\n          <Avatar\r\n            style={{ backgroundColor: \"#87d068\" }}\r\n            className={b(\"avatar\")}\r\n            src=\"https://avatars3.githubusercontent.com/u/40214545?s=460&v=4\"\r\n          />\r\n          <Dropdown overlay={menu} trigger={[\"click\"]}>\r\n            <a className=\"ant-dropdown-link\" href=\"#\">\r\n              <div className={b(\"username\")}>Юля Красивая</div>\r\n              <Icon type=\"down\" style={{ fontSize: \"12px\", color: \"#fff\", marginTop: \"3px\" }} />\r\n            </a>\r\n          </Dropdown>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { withNaming } from \"@bem-react/classname\";\r\nimport \"./Input.scss\";\r\n\r\nimport { Input as AntdInput } from \"antd\";\r\n\r\nconst cn = withNaming({ n: \"\", e: \"__\", m: \"_\", v: \"_\" });\r\nconst b = cn(\"site-input\");\r\n\r\ninterface Props {\r\n  title: string;\r\n  tip: string;\r\n}\r\n\r\nexport const Input = (props: Props) => {\r\n  const { title, tip } = props;\r\n\r\n  return (\r\n    <div className={b()}>\r\n      <label className={b(\"title\")}>{title}</label>\r\n      <AntdInput size=\"large\" />\r\n      <span className={b(\"tip\")}>{tip}</span>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { withNaming } from \"@bem-react/classname\";\r\nimport \"./Steps.scss\";\r\n\r\nimport { Steps as AntdSteps, Button } from \"antd\";\r\nconst { Step } = AntdSteps;\r\n\r\nconst cn = withNaming({ n: \"\", e: \"__\", m: \"_\", v: \"_\" });\r\nconst b = cn(\"site-steps\");\r\n\r\ninterface StepInfo {\r\n  title: string;\r\n  subTitle: string;\r\n  description: React.ReactNode;\r\n}\r\n\r\ninterface Props {\r\n  steps: Array<StepInfo>;\r\n  currentStep: number;\r\n}\r\n\r\nexport const Steps = (props: Props) => {\r\n  const { steps, currentStep } = props;\r\n\r\n  return (\r\n    <AntdSteps direction=\"vertical\" size=\"small\" current={currentStep} className={b()}>\r\n      {steps.map((stepData, index) => (\r\n        <Step\r\n          title={stepData.title}\r\n          description={index === currentStep ? stepData.description : \"\"}\r\n          subTitle={stepData.subTitle}\r\n        ></Step>\r\n      ))}\r\n    </AntdSteps>\r\n  );\r\n};\r\n","import { formConstants } from \"./../constants\";\r\n\r\nexport const formActions = {\r\n  changeStep,\r\n  stepLoaded\r\n};\r\n\r\nfunction changeStep() {\r\n  return { type: formConstants.STEP_CHANGED };\r\n}\r\n\r\nfunction stepLoaded() {\r\n  return { type: formConstants.STEP_LOAD_SUCCESS };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { withNaming } from \"@bem-react/classname\";\r\nimport { connect } from \"react-redux\";\r\nimport { Breadcrumb, Button, Radio, Upload, Icon, Divider } from \"antd\";\r\nimport \"./Main.scss\";\r\nimport { Input, Steps } from \"./../../components\";\r\nimport { formActions } from \"./../../actions\";\r\n\r\nconst { Dragger } = Upload;\r\n\r\nconst cn = withNaming({ n: \"\", e: \"__\", m: \"_\", v: \"_\" });\r\nconst b = cn(\"main-page\");\r\n\r\nclass Main extends Component<any> {\r\n  constructor(props: any) {\r\n    super(props);\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   const { dispatch } = this.props;\r\n  //   dispatch(formActions.changeStep());\r\n  // }\r\n\r\n  renderNalogRadio = () => {\r\n    return (\r\n      <Radio.Group>\r\n        <Radio value={\"osno\"}>ОСНО</Radio>\r\n        <Radio value={\"usn\"}>УСН (Доходы)</Radio>\r\n      </Radio.Group>\r\n    );\r\n  };\r\n\r\n  renderFileInputs = () => {\r\n    return (\r\n      <div className={b(\"files\")}>\r\n        <h3 className={b(\"files-title\")}>\r\n          Загрузка <br /> документов\r\n        </h3>\r\n        <div className={b(\"dragger\")}>\r\n          <Dragger>\r\n            <p className=\"ant-upload-drag-icon\">\r\n              <Icon type=\"inbox\" />\r\n            </p>\r\n            <p className=\"ant-upload-text\">Скан паспорта</p>\r\n            <p className=\"ant-upload-hint\">Перетяните файлы в эту область </p>\r\n          </Dragger>\r\n        </div>\r\n\r\n        <div className={b(\"dragger\")}>\r\n          <Dragger>\r\n            <p className=\"ant-upload-drag-icon\">\r\n              <Icon type=\"inbox\" />\r\n            </p>\r\n            <p className=\"ant-upload-text\">Скан прописки</p>\r\n            <p className=\"ant-upload-hint\">Перетяните файлы в эту область </p>\r\n          </Dragger>\r\n        </div>\r\n\r\n        <div className={b(\"dragger\")}>\r\n          <Dragger>\r\n            <p className=\"ant-upload-drag-icon\">\r\n              <Icon type=\"inbox\" />\r\n            </p>\r\n            <p className=\"ant-upload-text\">Скан СНИЛС</p>\r\n            <p className=\"ant-upload-hint\">Перетяните файлы в эту область </p>\r\n          </Dragger>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderBreadcrumbs = () => {\r\n    return (\r\n      <div className={b(\"breadcrumbs\")}>\r\n        <Button icon=\"arrow-left\" className={b(\"back\")}>\r\n          Назад в панель управления\r\n        </Button>\r\n        <Breadcrumb>\r\n          <Breadcrumb.Item>Breadcrumb link</Breadcrumb.Item>\r\n          <Breadcrumb.Item>\r\n            <a href=\"\">Breadcrumb link</a>\r\n          </Breadcrumb.Item>\r\n          <Breadcrumb.Item>\r\n            <a href=\"\">Breadcrumb link</a>\r\n          </Breadcrumb.Item>\r\n          <Breadcrumb.Item>Breadcrumb link</Breadcrumb.Item>\r\n        </Breadcrumb>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderAside = () => {\r\n    const { currentStep, isStepLoading, changeStep } = this.props;\r\n    console.log(\"main here, changeStep = \", changeStep);\r\n\r\n    const generateButton = (title: string) => {\r\n      return (\r\n        <React.Fragment>\r\n          <Button className={b(\"btn\")} onClick={changeStep} disabled={isStepLoading ? true : false}>\r\n            {title}\r\n          </Button>\r\n          {isStepLoading ? <Icon type=\"loading\" /> : \"\"}\r\n        </React.Fragment>\r\n      );\r\n    };\r\n\r\n    const steps = [\r\n      {\r\n        title: \"Заполнение\",\r\n        subTitle: \"Описание\",\r\n        description: generateButton(\"Выпустить КЭП\")\r\n      },\r\n      {\r\n        title: \"Выпуск КЭП\",\r\n        subTitle: \"Описание\",\r\n        description: generateButton(\"Подписать\")\r\n      },\r\n      {\r\n        title: \"Подписание\",\r\n        subTitle: \"Описание\",\r\n        description: generateButton(\"Отправить в ФНС\")\r\n      },\r\n      {\r\n        title: \"Отправка в ФНС\",\r\n        subTitle: \"Описание\",\r\n        description: generateButton(\"Далее\")\r\n      },\r\n      {\r\n        title: \"Регистрация в ФНС\",\r\n        subTitle: \"Описание\",\r\n        description: generateButton(\"Далее\")\r\n      }\r\n    ];\r\n    return (\r\n      <aside className={b(\"aside\")}>\r\n        <Steps currentStep={currentStep} steps={steps} />\r\n      </aside>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={b()}>\r\n        <div className={b(\"content-inner\")}>\r\n          {this.renderAside()}\r\n\r\n          <div className={b(\"wrapper\")}>\r\n            {this.renderBreadcrumbs()}\r\n            <div className={b(\"section-wrapper\")}>\r\n              <section className={b(\"section\")}>\r\n                <h2 className={b(\"title\")}>Контакты и общая информация</h2>\r\n                <div className={b(\"inputs-grid\")}>\r\n                  <Input title=\"Фамилия\" tip=\"обязательное поле!\" />\r\n                  <Input title=\"Имя\" tip=\"обязательное поле!\" />\r\n                  <Input title=\"Отчество\" tip=\"обязательное поле!\" />\r\n                  <Input title=\"Номер телефона\" tip=\"обязательное поле!\" />\r\n                  <Input title=\"Электронная почта\" tip=\"обязательное поле!\" />\r\n                </div>\r\n\r\n                <div className={b(\"radio\")}>\r\n                  <label className={b(\"radio-title\")}>Налоговый режим</label>\r\n                  {this.renderNalogRadio()}\r\n                </div>\r\n\r\n                <Divider />\r\n              </section>\r\n\r\n              {this.renderFileInputs()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state: any) {\r\n  const { currentStep, isStepLoading } = state.form;\r\n  return {\r\n    currentStep,\r\n    isStepLoading\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => {\r\n  return {\r\n    changeStep: () => {\r\n      dispatch(formActions.changeStep());\r\n      setTimeout(() => dispatch(formActions.stepLoaded()), 2000);\r\n    }\r\n  };\r\n};\r\n\r\nconst connectedComponent = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Main);\r\n\r\nexport { connectedComponent as Main };\r\n","import React, { Component } from \"react\";\n\nimport \"./App.scss\";\n\nimport { Main } from \"./pages\";\n\nimport { Header } from \"./components\";\n\nimport { Router, Route } from \"react-router-dom\";\n\nimport { history } from \"./helpers\";\n\nexport class App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n\n        <Router history={history}>\n          <div>\n            <Route exact path=\"/\" component={Main} />\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Provider } from \"react-redux\";\n\nimport { store } from \"./helpers\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}