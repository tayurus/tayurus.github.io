{"version":3,"sources":["components/Event/Event.js","components/EventsCalendar/divideEventsOnTimeRows.js","components/EventsCalendar/EventsCalendar.js","components/EventsForm/EventsForm.js","constants/colors.js","App.js","serviceWorker.js","index.js"],"names":["Event","props","_props$event","event","title","s","e","color","row","minutesStart","Math","floor","getHours","getMinutes","minutesEnd","react_default","a","createElement","className","style","background","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","eventsHasCollisions","firstEvent","secondEvent","firstCondition","secondCondition","thirdCondition","getTime","rowHasCollisionWithEvent","i","length","getRowWithoutCollisions","events","rest","Object","toConsumableArray","push","splice","removedCount","EventsCalendar","_React$Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","inherits","createClass","key","value","timeline","rows","res","divideEventsOnTimeRows","drawTimeLine","gridTemplateRows","map","rowIndex","Event_Event_Event","React","Component","EventsForm","_this","state","handleChange","bind","assertThisInitialized","setState","defineProperty","target","name","addEvent","onSubmit","preventDefault","type","required","onChange","colors","Navy","Blue","Aqua","TEAL","OLIVE","GREEN","LIME","YELLOW","tomato","limegreen","_","require","d","str","Date","hours","split","minutes","setHours","setMinutes","setMilliseconds","getRandomColor","colorsArray","values","random","App","newEvent","concat","EventsCalendar_EventsCalendar_EventsCalendar","EventsForm_EventsForm_EventsForm","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.79fd6b3d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Event.css\";\r\n\r\nexport const Event = props => {\r\n  const { title, s, e, color } = props.event;\r\n  const { row } = props;\r\n  const minutesStart = Math.floor((s.getHours() * 60 + s.getMinutes()) / 2);\r\n  const minutesEnd = Math.floor((e.getHours() * 60 + e.getMinutes()) / 2);\r\n  const rowsOffset = 10;\r\n  return (\r\n    <div\r\n      className=\"Event\"\r\n      style={{\r\n        background: color,\r\n        gridColumnStart: minutesStart + 1,\r\n        gridColumnEnd: minutesEnd,\r\n        gridRowStart: row * 20 + row * 5,\r\n        gridRowEnd: row * 20 + 20 + row * 5\r\n      }}\r\n    >\r\n      {minutesEnd - minutesStart < 22 ? (\r\n        <div className=\"Event__icon\" />\r\n      ) : (\r\n        <div className=\"Event__title\">{title}</div>\r\n      )}\r\n\r\n      <div className=\"Event__hint\">{title}</div>\r\n      <div className=\"Event__line\" />\r\n    </div>\r\n  );\r\n};\r\n","function eventsHasCollisions(firstEvent, secondEvent) {\r\n  const firstCondition =\r\n    (firstEvent.s > secondEvent.s && firstEvent.s < secondEvent.e) ||\r\n    (secondEvent.s > firstEvent.s && secondEvent.s < firstEvent.e);\r\n  const secondCondition =\r\n    (firstEvent.e > secondEvent.s && firstEvent.e < secondEvent.e) ||\r\n    (secondEvent.e > firstEvent.s && secondEvent.e < firstEvent.e);\r\n  const thirdCondition =\r\n    firstEvent.s.getTime() === secondEvent.s.getTime() &&\r\n    firstEvent.e.getTime() === secondEvent.e.getTime();\r\n  return firstCondition || secondCondition || thirdCondition;\r\n}\r\n\r\nfunction rowHasCollisionWithEvent(row, event) {\r\n  for (let i = 0; i < row.length; i++) {\r\n    if (eventsHasCollisions(row[i], event)) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction getRowWithoutCollisions(events) {\r\n  let row = [];\r\n  let rest = [...events];\r\n\r\n  row.push(events[0]);\r\n  rest.splice(0, 1);\r\n  let removedCount = 1;\r\n\r\n  for (let i = 1; i < events.length; i++) {\r\n    if (!rowHasCollisionWithEvent(row, events[i])) {\r\n      row.push(events[i]);\r\n      rest.splice(i - removedCount, 1);\r\n      removedCount++;\r\n    }\r\n  }\r\n\r\n  return [row, rest];\r\n}\r\n\r\nexport function divideEventsOnTimeRows(events) {\r\n  let res = [],\r\n    rest = [];\r\n  res.push(getRowWithoutCollisions(events)[0]);\r\n  rest = getRowWithoutCollisions(events)[1];\r\n\r\n  while (rest.length !== 0) {\r\n    res.push(getRowWithoutCollisions(rest)[0]);\r\n    rest = getRowWithoutCollisions(rest)[1];\r\n  }\r\n\r\n  return res;\r\n}\r\n\r\nfunction d(str) {\r\n  let res = new Date();\r\n  let hours = str.split(\":\")[0];\r\n  let minutes = str.split(\":\")[1];\r\n  res.setHours(hours);\r\n  res.setMinutes(minutes);\r\n  res.setMilliseconds(0);\r\n  return res;\r\n}\r\n","import React from \"react\";\r\nimport \"./EventsCalendar.css\";\r\n\r\nimport { Event } from \"./../index\";\r\nimport { divideEventsOnTimeRows } from \"./divideEventsOnTimeRows.js\";\r\n\r\nexport class EventsCalendar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  drawTimeLine() {\r\n    let timeline = [];\r\n    for (let i = 0; i <= 23; i++) {\r\n      timeline.push(\r\n        <div className=\"EventsCalendar__timeline-item\">\r\n          {i < 10 ? \"0\" + i : i}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return timeline;\r\n  }\r\n\r\n  render() {\r\n    const { events } = this.props;\r\n    const rows = divideEventsOnTimeRows(events);\r\n    return (\r\n      <div className=\"EventsCalendar\">\r\n        <div className=\"EventsCalendar__timeline\">{this.drawTimeLine()}</div>\r\n        <div\r\n          className=\"EventsCalendar__grid\"\r\n          style={{ gridTemplateRows: \"repeat(\" + rows.length * 30 + \", 2px)\" }}\r\n        >\r\n          {rows.map((row, rowIndex) =>\r\n            row.map(event => <Event event={event} row={rowIndex + 1} />)\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./EventsForm.css\";\r\nexport class EventsForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { addEvent } = this.props;\r\n    const event = this.state;\r\n    return (\r\n      <div className=\"EventsForm\">\r\n        <form\r\n          onSubmit={e => {\r\n            addEvent(event);\r\n            e.preventDefault();\r\n          }}\r\n          className=\"EventsForm__form\"\r\n        >\r\n          <div className=\"EventsForm__row\">\r\n            <label className=\"EventsForm__label\">Event title:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              className=\"EventsForm__input\"\r\n              required\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"EventsForm__row\">\r\n            <label className=\"EventsForm__label\">Event starts at:</label>\r\n            <input\r\n              type=\"time\"\r\n              name=\"s\"\r\n              className=\"EventsForm__input\"\r\n              required\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"EventsForm__row\">\r\n            <label className=\"EventsForm__label\">Event ends at:</label>\r\n            <input\r\n              type=\"time\"\r\n              name=\"e\"\r\n              className=\"EventsForm__input\"\r\n              required\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <button className=\"EventsForm__button\">ADD</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export const colors = {\r\n  Navy: \"#001f3f\",\r\n  Blue: \"#0074D9\",\r\n  Aqua: \"#7FDBFF\",\r\n  TEAL: \"#39CCCC\",\r\n  OLIVE: \"#3D9970\",\r\n  GREEN: \"#2ECC40\",\r\n  LIME: \"#01FF70\",\r\n  YELLOW: \"#FFDC00\",\r\n  tomato: \"tomato\",\r\n  limegreen: \"limegreen\"\r\n};\r\n","import React, { Component } from \"react\";\nimport { EventsCalendar, EventsForm } from \"./components\";\nimport \"./App.css\";\nimport { colors } from \"./constants\";\nvar _ = require(\"lodash\");\n\nfunction d(str) {\n  let res = new Date();\n  let hours = str.split(\":\")[0];\n  let minutes = str.split(\":\")[1];\n  res.setHours(hours);\n  res.setMinutes(minutes);\n  res.setMilliseconds(0);\n  return res;\n}\n\nfunction getRandomColor() {\n  const colorsArray = Object.values(colors);\n  const colorIndex = _.random(0, colorsArray.length - 1);\n  return colorsArray[colorIndex];\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      events: [\n        {\n          title: \"Event1\",\n          s: d(\"6:00\"),\n          e: d(\"7:00\"),\n          color: getRandomColor()\n        },\n        {\n          title: \"Event2\",\n          s: d(\"7:00\"),\n          e: d(\"9:30\"),\n          color: getRandomColor()\n        },\n        {\n          title: \"Event3\",\n          s: d(\"7:30\"),\n          e: d(\"18:30\"),\n          color: getRandomColor()\n        }\n      ]\n    };\n\n    this.addEvent = this.addEvent.bind(this);\n  }\n\n  addEvent(event) {\n    const newEvent = {\n      title: event.title,\n      s: d(event.s),\n      e: d(event.e),\n      color: getRandomColor()\n    };\n    this.setState({ events: [...this.state.events, newEvent] });\n  }\n\n  render() {\n    const { events } = this.state;\n    return (\n      <div className=\"App\">\n        <EventsCalendar events={events} />\n        <EventsForm addEvent={this.addEvent} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}